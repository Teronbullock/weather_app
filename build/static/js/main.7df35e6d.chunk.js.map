{"version":3,"sources":["components/AppBody/img/clear01.jpg","components/AppBody/img/clear02.jpg","components/AppBody/img/atmosphere01.jpg","components/AppBody/img/clouds01.jpg","components/AppBody/img/clouds02.jpg","components/AppBody/img/rain01.jpg","components/AppBody/img/rain02.jpg","components/AppBody/img/drizzle01.jpg","components/AppBody/img/drizzle02.jpg","components/AppBody/img/thunderstorm01.jpg","components/AppBody/img/thunderstorm02.jpg","components/AppBody/img/snow01.jpg","components/AppBody/img/snow02.jpg","components/AppBody/img/fog01.jpg","components/AppBody/img/fog02.jpg","assets/js/date.js","components/AppContext/getApi/getApi.js","components/AppContext/getApi/apiWeatherRes.js","components/AppContext/getApi/weatherUtility.js","components/AppContext/AppContext.jsx","components/Form/Form.jsx","components/DetailCard/DetailCard.jsx","components/DetailCardInfo/DetailCardInfo.jsx","components/DetailCardHourlyInfo/DetailCardHourlyInfo.jsx","components/Hero/Hero.jsx","components/AppBody/AppBody.jsx","components/AppBody/bgChange.js","components/Routes/Home/Home.jsx","index.js","components/App.jsx"],"names":["module","exports","option","opt1","weekday","month","day","hour","minute","hour12","opt2","opt3","opt4","getDate","optInput","Date","toLocaleString","getTime","input","toLocaleTimeString","localType","forecastType","apiInput","apiKey","process","getUrl","baseUrl","zip","city","getlocalType","this","geo","axios","get","then","res","currentWeatherData","location","data","name","currentTemp","Math","round","main","temp","highTemp","temp_max","lowTemp","temp_min","realFeel","feels_like","pressure","toFixed","humidity","weatherCondition","weather","weatherTypeDes","description","weatherIcon","icon","sunrise","sys","sunset","wind","deg","speed","currentWeatherRes","hourlyWeatherData","listData","list","slice","map","index","time","dt","id","toString","hourlyWeatherRes","AppContext","React","createContext","Provider","handleFormChange","e","setState","formData","value","target","handleFormSubmit","formInput","state","preventDefault","isNaN","length","getApi","currentTime","catch","error","console","log","alert","clouds","rain","form","actions","formChange","submitFormChange","props","children","Component","Consumer","Form","className","onSubmit","type","placeholder","onChange","title_1","title_2","info_1","info_2","alt","src","key","Fragment","backgroundURL","bgURL","clear01","clouds01","rain01","drizzle01","thunderstorm01","snow01","fog01","atmosphere01","clear02","clouds02","rain02","drizzle02","thunderstorm02","snow02","fog02","getBackground","appBodyStyle","backgroundImage","style","dotenv","config","rootElement","document","getElementById","ReactDOM","render","exact","path","component","Home"],"mappings":"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","file":"static/js/main.7df35e6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear01.0e22ffe4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clear02.e4dd8b74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atmosphere01.0dcd1362.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds01.5fc21ca6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds02.0644a13e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain01.bbee94fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain02.2fa192ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle01.42ebb8bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle02.426aa403.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm01.f8caeac8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm02.f3a7f6d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow01.45084cf1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow02.d25416fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog01.eba91856.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog02.bd14f4d8.jpg\";","const option = {\r\n  opt1: {\r\n    weekday: 'long',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: '2-digit',\r\n    hour12: true,\r\n  },\r\n  opt2: {\r\n    hour: 'numeric',\r\n    hour12: true,\r\n  },\r\n  opt3: {\r\n    hour: 'numeric',\r\n    minute: '2-digit',\r\n    hour12: true,\r\n  },\r\n  opt4: {\r\n    hour: 'numeric',\r\n    minute: '2-digit',\r\n    hour12: false,\r\n  },\r\n};\r\n\r\nexport const getDate = optInput => {\r\n  const date = new Date();\r\n  return date.toLocaleString('en-US', option[optInput]);\r\n};\r\n\r\nexport const getTime = (optInput, input) => {\r\n  const date = new Date(input * 1000);\r\n  return date.toLocaleTimeString('en-US', option[optInput]);\r\n};\r\n","import { currentWeatherRes, hourlyWeatherRes } from './apiWeatherRes';\nimport axios from 'axios';\n\n// Configs api call\nexport default (localType, forecastType, apiInput) => {\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  // Configs the api url based on zip or city input\n  const apiUrl = {\n    baseUrl: 'https://api.openweathermap.org/data/2.5/',\n    zip: `${forecastType}?zip=${apiInput},us&units=imperial&appid=${apiKey}`,\n    city: `${forecastType}?q=${apiInput},us&units=imperial&appid=${apiKey}`,\n    getlocalType() {\n      if (localType === 'zip') {\n        return this.baseUrl + this.zip;\n      } else if (localType === 'city') {\n        return this.baseUrl + this.city;\n      } else if (localType === 'geo') {\n        return this.baseUrl + this.geo;\n      }\n    },\n  };\n\n  const getUrl = apiUrl.getlocalType();\n\n  return axios.get(getUrl).then(res => {\n    // returns api data obj based on forecast type\n    if (forecastType === 'weather') {\n      let data = currentWeatherRes(res);\n      return data;\n    } else if (forecastType === 'forecast') {\n      let data_1 = hourlyWeatherRes(res);\n      return data_1;\n    }\n  });\n};\n","import { windDir, pressure } from './weatherUtility';\nimport { getTime } from '../../../assets/js/date';\n\nexport const currentWeatherRes = res => {\n  return {\n    currentWeatherData: {\n      location: res.data.name,\n      currentTemp: `${Math.round(res.data.main.temp)}°`,\n      highTemp: `${Math.round(res.data.main.temp_max)}°`,\n      lowTemp: `${Math.round(res.data.main.temp_min)}°`,\n      realFeel: `${Math.round(res.data.main.feels_like)}°`,\n      pressure: `${pressure(res.data.main.pressure)} in`,\n      humidity: `${res.data.main.humidity}%`,\n      weatherCondition: res.data.weather[0].main,\n      weatherTypeDes: res.data.weather[0].description,\n      weatherIcon: res.data.weather[0].icon,\n      sunrise: `${res.data.sys.sunrise}`,\n      sunset: `${res.data.sys.sunset}`,\n      wind: `${windDir(res.data.wind.deg)} ${res.data.wind.speed} mph `,\n    },\n  };\n};\n\nexport const hourlyWeatherRes = res => {\n  const data = res.data.list.slice(0, 5).map((list, index) => {\n    return {\n      time: getTime('opt2', list.dt),\n      weatherIcon: list.weather[0].icon,\n      temp: `${Math.round(list.main.temp)}°`,\n      id: index.toString(),\n    };\n  });\n\n  return {\n    hourlyWeatherData: {\n      listData: data,\n    },\n  };\n};\n","export const windDir = input => {\n  let deg;\n\n  switch (140) {\n    default:\n      deg = console.log('wind deg not found.');\n      break;\n    case 350:\n    case 360:\n    case 10:\n      deg = 'N';\n      break;\n    case 20:\n    case 30:\n      deg = 'N/NE';\n      break;\n    case 40:\n    case 50:\n      deg = 'NE';\n      break;\n    case 60:\n    case 70:\n      deg = 'E/NE';\n      break;\n    case 80:\n    case 90:\n    case 100:\n      deg = 'E';\n      break;\n    case 110:\n    case 120:\n      deg = 'E/SE';\n      break;\n    case 130:\n    case 140:\n      deg = 'SE';\n      break;\n    case 150:\n    case 160:\n      deg = 'S/SE';\n      break;\n    case 170:\n    case 180:\n    case 190:\n      deg = 'S';\n      break;\n    case 200:\n    case 210:\n      deg = 'S/SW';\n      break;\n    case 220:\n    case 230:\n      deg = 'SW';\n      break;\n    case 240:\n    case 250:\n      deg = 'W/SW';\n      break;\n    case 260:\n    case 270:\n    case 280:\n      deg = 'W';\n      break;\n    case 290:\n    case 300:\n      deg = 'W/NW';\n      break;\n    case 310:\n    case 320:\n      deg = 'NW';\n      break;\n    case 330:\n    case 340:\n      deg = 'N/NW';\n  }\n\n  return deg;\n};\n\nexport const pressure = input => {\n  let pressureInput = input / 33.864;\n  return pressureInput.toFixed(2);\n};\n","import React, { Component } from 'react';\r\nimport getApi from './getApi';\r\nimport { getDate } from '../../assets/js/date';\r\n\r\nconst currentForecast = 'weather';\r\nconst hourlyForecast = 'forecast';\r\nconst AppContext = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentWeatherData: {\r\n        currentTemp: [],\r\n        highTemp: [],\r\n        lowTemp: [],\r\n        location: [],\r\n        realFeel: [],\r\n        pressure: [],\r\n        humidity: [],\r\n        weatherCondition: [],\r\n        weatherTypeDes: [],\r\n        weatherIcon: [],\r\n        sunrise: [],\r\n        sunset: [],\r\n        wind: [],\r\n        clouds: [],\r\n        rain: [],\r\n      },\r\n      hourlyWeatherData: {\r\n        listData: [],\r\n      },\r\n      formData: {\r\n        value: '',\r\n      },\r\n      time: {\r\n        currentTime: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  handleFormChange = e => {\r\n    this.setState({\r\n      formData: { value: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    const formInput = this.state.formData.value;\r\n\r\n    e.preventDefault();\r\n\r\n    //Checks if form input is a Zip Code.\r\n    if (isNaN(formInput) === false) {\r\n      if (formInput.length === 5) {\r\n        // fetch current weather data via Zip Code.\r\n\r\n        getApi('zip', currentForecast, formInput)\r\n          .then(data => {\r\n            this.setState(data);\r\n          })\r\n          .then(\r\n            this.setState({\r\n              time: {\r\n                currentTime: getDate('opt1'),\r\n              },\r\n            })\r\n          )\r\n          .catch(error => {\r\n            console.log(\r\n              'Error fetching current weather data via user input',\r\n              error\r\n            );\r\n            alert(\r\n              'Please verify that you have entered a valid US Zip Code.',\r\n              error\r\n            );\r\n            console.log(getApi('zip', currentForecast, formInput));\r\n          });\r\n\r\n        // fetch Hourly weather data via Zip Code.\r\n        getApi('zip', hourlyForecast, formInput)\r\n          .then(data => {\r\n            this.setState(data);\r\n          })\r\n          .catch(error => {\r\n            console.log(\r\n              'Error fetching hourly weather data via user input.',\r\n              error\r\n            );\r\n          });\r\n      } else {\r\n        alert('Please enter a valid 5 digit Zip Code.');\r\n      }\r\n    }\r\n\r\n    // Check if form input is a string for (city) input.\r\n    else if (isNaN(formInput)) {\r\n      // fetch current weather data via (city) input.\r\n      getApi('city', currentForecast, formInput)\r\n        .then(data => {\r\n          this.setState(data);\r\n        })\r\n        .then(\r\n          this.setState({\r\n            time: {\r\n              currentTime: getDate('opt1'),\r\n            },\r\n          })\r\n        )\r\n        .catch(error => {\r\n          console.log('Error in fetching city name.', error);\r\n          alert(\r\n            'Please verify that you have entered a valid US city name.',\r\n            error\r\n          );\r\n        });\r\n\r\n      // fetch current weather data via (city) input.\r\n      getApi('city', hourlyForecast, formInput).then(data => {\r\n        this.setState(data);\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      formData: { value: '' },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiInput = 10001;\r\n\r\n    // Initial fetch of current weather data via Zip Code.\r\n    getApi('zip', currentForecast, apiInput)\r\n      .then(data => {\r\n        this.setState(data);\r\n      })\r\n      .then(\r\n        this.setState({\r\n          time: {\r\n            currentTime: getDate('opt1'),\r\n          },\r\n        })\r\n      )\r\n      .catch(error => {\r\n        console.log(\r\n          'Error in fetching the initial current weather data via Zip code.',\r\n          error\r\n        );\r\n      });\r\n\r\n    // Init fetch of Hourly weather data via Zip Code.\r\n    getApi('zip', hourlyForecast, apiInput)\r\n      .then(data => {\r\n        this.setState(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(\r\n          'Error in fetching the initial hourly weather data via Zip code.',\r\n          error\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Provider\r\n        value={{\r\n          currentWeatherData: this.state.currentWeatherData,\r\n          hourlyWeatherData: this.state.hourlyWeatherData.listData,\r\n          form: this.state.formData,\r\n          time: this.state.time.currentTime,\r\n          actions: {\r\n            formChange: this.handleFormChange,\r\n            submitFormChange: this.handleFormSubmit,\r\n          },\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = AppContext.Consumer;\r\n","import React from 'react';\r\nimport { Consumer } from '../AppContext';\r\nimport './form.scss';\r\n\r\nexport const Form = () => {\r\n  return (\r\n    <Consumer>\r\n      {({ actions, form }) => {\r\n        return (\r\n          <div className=\"form__container\">\r\n            <form className=\"form\" onSubmit={actions.submitFormChange}>\r\n              <input\r\n                id=\"form__input\"\r\n                className=\"form__input\"\r\n                type=\"text\"\r\n                name=\"searchinput\"\r\n                placeholder=\"Search Zip Code or City, State\"\r\n                onChange={actions.formChange}\r\n                value={form.value}\r\n              />\r\n              <input className=\"form__submit\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n","import React from 'react';\nimport './DetailCard.scss';\n\nexport default ({ module }) => {\n  return (\n    <div className=\"detail-card\">\n      <div className=\"detail-card__inner detail-card--mask\">{module}</div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport './DetailCardInfo.scss';\r\n\r\nexport default ({ title_1, title_2, info_1, info_2 }) => {\r\n  return (\r\n    <div className=\"detail-info\">\r\n      <div className=\"detail-info__item\">\r\n        <p className=\"detail-info__title\">{title_1}</p>\r\n        <p className=\"detail-info__info\">{info_1}</p>\r\n      </div>\r\n      <div className=\"detail-info__item\">\r\n        <p className=\"detail-info__title\">{title_2}</p>\r\n        <p className=\"detail-info__info\">{info_2}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Consumer } from '../AppContext';\nimport './DetailCardHourlyInfo.scss';\nexport default () => {\n  return (\n    <Consumer>\n      {({ hourlyWeatherData, currentWeatherData }) => {\n        const { weatherIcon, currentTemp } = currentWeatherData;\n\n        return (\n          <div className=\"hourly-weather\">\n            <div className=\"hourly-weather__item\">\n              <p className=\"hourly-weather__label\">Now</p>\n              <img\n                className=\"hourly-weather__img\"\n                alt=\"Weather Icon\"\n                src={`\n                  http://openweathermap.org/img/wn/${weatherIcon}@2x.png\n                `}\n              />\n              <p className=\"hourly-weather__info\">{currentTemp}</p>\n            </div>\n\n            {hourlyWeatherData.map(list => (\n              <div key={list.id} className=\"hourly-weather__item\">\n                <p className=\"hourly-weather__label\">{list.time}</p>\n                <img\n                  className=\"hourly-weather__img\"\n                  alt=\"Weather Icon\"\n                  src={`http://openweathermap.org/img/wn/${list.weatherIcon}@2x.png`}\n                />\n                <p className=\"hourly-weather__info\">{list.temp}</p>\n              </div>\n            ))}\n          </div>\n        );\n      }}\n    </Consumer>\n  );\n};\n","import React from 'react';\nimport './Hero.scss';\nimport { Consumer } from '../AppContext/AppContext';\n\nexport default () => {\n  return (\n    <Consumer>\n      {({ currentWeatherData, time }) => {\n        const {\n          location,\n          weatherTypeDes,\n          currentTemp,\n          highTemp,\n          lowTemp,\n        } = currentWeatherData;\n\n        return (\n          <React.Fragment>\n            <div className=\"hero-info\">\n              <p className=\"hero-info__info\">{location}</p>\n            </div>\n            <div className=\"hero-info\">\n              <p className=\"hero-info__info\">{weatherTypeDes}</p>\n            </div>\n            <div className=\"hero-info\">\n              <p className=\"hero-info__info hero-info__current-temp\">\n                {currentTemp}\n              </p>\n            </div>\n            <div className=\"hero-info\">\n              <p className=\"hero-info__info\">\n                {highTemp} / {lowTemp}\n              </p>\n            </div>\n            <div className=\"hero-info\">\n              <p className=\"hero-info__info\">{time}</p>\n            </div>\n          </React.Fragment>\n        );\n      }}\n    </Consumer>\n  );\n};\n","import React from 'react';\r\nimport { Consumer } from '../AppContext';\r\nimport './AppBody.scss';\r\nimport getBackground from './bgChange.js';\r\nimport DetailCard from '../DetailCard';\r\nimport DetailCardInfo from '../DetailCardInfo';\r\nimport DetailCardHourlyInfo from '../DetailCardHourlyInfo';\r\nimport Hero from '../Hero';\r\nimport { getTime } from '../../assets/js/date';\r\n\r\nexport default () => {\r\n  return (\r\n    <Consumer>\r\n      {({ currentWeatherData }) => {\r\n        const {\r\n          pressure,\r\n          humidity,\r\n          weatherCondition,\r\n          sunrise,\r\n          sunset,\r\n          wind,\r\n          realFeel,\r\n        } = currentWeatherData;\r\n\r\n        const backgroundURL = getBackground(weatherCondition, sunrise, sunset);\r\n        const appBodyStyle = {\r\n          backgroundImage: `url(${backgroundURL})`,\r\n        };\r\n\r\n        return (\r\n          <div className=\"app-body\" id=\"app-body\" style={appBodyStyle}>\r\n            <div className=\"container app-body__overlay\">\r\n              <div className=\"app-body__top-section\">\r\n                <Hero />\r\n              </div>\r\n              <div className=\"app-body__bottom-section\">\r\n                <DetailCard module={<DetailCardHourlyInfo />} />\r\n                <DetailCard\r\n                  module={\r\n                    <DetailCardInfo\r\n                      title_1=\"SUNRISE\"\r\n                      title_2=\"SUNSET\"\r\n                      info_1={getTime('opt3', sunrise)}\r\n                      info_2={getTime('opt3', sunset)}\r\n                    />\r\n                  }\r\n                />\r\n                <DetailCard\r\n                  module={\r\n                    <DetailCardInfo\r\n                      title_1=\"HUMIDITY\"\r\n                      title_2=\"PRESSURE\"\r\n                      info_1={humidity}\r\n                      info_2={pressure}\r\n                    />\r\n                  }\r\n                />\r\n                <DetailCard\r\n                  module={\r\n                    <DetailCardInfo\r\n                      title_1=\"WIND\"\r\n                      title_2=\"FEELS LIKE\"\r\n                      info_1={wind}\r\n                      info_2={realFeel}\r\n                    />\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n","import { getDate, getTime } from '../../assets/js/date';\r\nimport clear01 from './img/clear01.jpg';\r\nimport clear02 from './img/clear02.jpg';\r\nimport clouds01 from './img/clouds01.jpg';\r\nimport clouds02 from './img/clouds02.jpg';\r\nimport rain01 from './img/rain01.jpg';\r\nimport rain02 from './img/rain02.jpg';\r\nimport drizzle01 from './img/drizzle01.jpg';\r\nimport drizzle02 from './img/drizzle02.jpg';\r\nimport thunderstorm01 from './img/thunderstorm01.jpg';\r\nimport thunderstorm02 from './img/thunderstorm02.jpg';\r\nimport snow01 from './img/snow01.jpg';\r\nimport snow02 from './img/snow02.jpg';\r\nimport fog01 from './img/fog01.jpg';\r\nimport fog02 from './img/fog02.jpg';\r\nimport atmosphere01 from './img/atmosphere01.jpg';\r\n\r\nexport default (weatherCondition, sunrise, sunset) => {\r\n  let bgURL;\r\n\r\n  if (\r\n    getDate('opt4') > getTime('opt4', sunrise) &&\r\n    getDate('opt4') < getTime('opt4', sunset)\r\n  ) {\r\n    switch (weatherCondition) {\r\n      default:\r\n        bgURL = clear01;\r\n        break;\r\n      case 'Clear':\r\n        bgURL = clear01;\r\n        break;\r\n      case 'Clouds':\r\n        bgURL = clouds01;\r\n        break;\r\n      case 'Rain':\r\n        bgURL = rain01;\r\n        break;\r\n      case 'Drizzle':\r\n        bgURL = drizzle01;\r\n        break;\r\n      case 'Thunderstorm':\r\n        bgURL = thunderstorm01;\r\n        break;\r\n      case 'Snow':\r\n        bgURL = snow01;\r\n        break;\r\n      case 'Mist':\r\n      case 'Fog':\r\n      case 'Haze':\r\n      case 'Smoke':\r\n        bgURL = fog01;\r\n        break;\r\n      case 'Squall':\r\n      case 'Tornado':\r\n      case 'Sand':\r\n      case 'Dust':\r\n        bgURL = atmosphere01;\r\n        break;\r\n    }\r\n    return bgURL;\r\n  } else {\r\n    switch (weatherCondition) {\r\n      default:\r\n        bgURL = clear02;\r\n        break;\r\n      case 'Clear':\r\n        bgURL = clear02;\r\n        break;\r\n      case 'Clouds':\r\n        bgURL = clouds02;\r\n        break;\r\n      case 'Rain':\r\n        bgURL = rain02;\r\n        break;\r\n      case 'Drizzle':\r\n        bgURL = drizzle02;\r\n        break;\r\n      case 'Thunderstorm':\r\n        bgURL = thunderstorm02;\r\n        break;\r\n      case 'Snow':\r\n        bgURL = snow02;\r\n        break;\r\n      case 'Mist':\r\n      case 'Fog':\r\n      case 'Haze':\r\n      case 'Smoke':\r\n        bgURL = fog02;\r\n        break;\r\n      case 'Squall':\r\n      case 'Tornado':\r\n      case 'Sand':\r\n      case 'Dust':\r\n        bgURL = atmosphere01;\r\n        break;\r\n    }\r\n    return bgURL;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Form } from '../../Form';\r\nimport AppBody from '../../AppBody';\r\n\r\nexport default props => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form />\r\n      <AppBody />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './assets/sass';\nimport { Provider } from './components/AppContext';\nimport dotenv from 'dotenv';\n\ndotenv.config();\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  rootElement\n);\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './Routes/Home/';\nexport default () => {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Route exact path=\"/\" component={Home} />\n      </React.Fragment>\n    </BrowserRouter>\n  );\n};\n"],"sourceRoot":""}